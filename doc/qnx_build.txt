Building the project
cmake -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake ../applink
or for Momentics project:
cmake -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake -G "Eclipse CDT4 - Unix Makefiles" ../applink

Building with support D-Bus
Install D-Bus (see https://adc.luxoft.com/confluence/x/0AHJDw)
cmake -DHMI2=ON -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake ../applink
or for Momentics project:
cmake -DHMI2=ON -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake -G "Eclipse CDT4 - Unix Makefiles" ../applink

Running project:
Change server IP in configuration file to QNX target IP.
Copy executable, log4cxx.properties, policy_table.json and configuration file to QNX target.
For D-Bus copy start_hmi.sh too.
You can copy it using scp. Example:
scp user_name@linux_pc_ip:/full_path/to/file .

For Web HMI set target IP in ini file and change target IP in src/components/HMI/ffw/RPCClient.js
For Qt HMI execute command on Linux PC:
export DBUS_SESSION_BUS_ADDRESS=tcp:host=target_IP,port=target_port
! Currently we don't have any configuration file for HMI.

Execute smartDeviceLinkCore on QNX qtarget.
Execute HMI on Linux PC.
For start Qt HMI execute star_hmi.sh on Linux PC.

Have fun!
