/*! \page components_smartobjects_types_cast Type cast for SmartObjects

One of easy and probably intuitive way to work with values in the Smart Object is simple using of the type casts. Implementation of NsAppLink::NsSmartObjects::CSmartObject class has all necessary declarations to support all required types.

Example 1 (Work with int value):

<code>
NsAppLink::NsSmartObjects::CSmartObject obj;

obj = 1;          //Assign int value

int i = (int)obj; //Get int value

</code>

Example 2 (Work with long value):

<code>

NsAppLink::NsSmartObjects::CSmartObject obj;

obj = 100l;         //Assign long value

long l = (long)obj; //Get long value

</code>

Example 3 (Work with double value):

<code>

NsAppLink::NsSmartObjects::CSmartObject obj;

obj = 3.14;             //Assign double value

double d = (double)obj; //Get double value

</code>

Example 4 (Work with char value):

<code>

NsAppLink::NsSmartObjects::CSmartObject obj;

obj = 'a';          //Assign char value

char c = (char)obj; //Get char value

</code>

Example 5 (Work with bool value):

<code>

NsAppLink::NsSmartObjects::CSmartObject obj;

obj = ture;         //Assign bool value

bool b = (bool)obj; //Get bool value

</code>

Example 6 (Work with string values):

<code>

NsAppLink::NsSmartObjects::CSmartObject obj1;

obj1 = "Hello, world";               //Assign char* string value

obj2 = std::string("Hello, world");  //Assign std::string value

std::string s1 = (std::string)obj1;

std::string s2 = (std::string)obj2;

</code>

Example 7 (Work with arrays):

<code>

NsAppLink::NsSmartObjects::CSmartObject simpleArray;

simpleArray[0] = 1;

simpleArray[1] = true;

simpleArray[2] = 'a';

simpleArray[3] = 3.14;

int val0 = (int)simpleArray[0];

bool val1 = (bool)simpleArray[1];

char val2 = (char)simpleArray[2];

double val3 = (double)simpleArray[3];

NsAppLink::NsSmartObjects::CSmartObject deepArray;

deepArray[0] = 1;

deepArray[1][0] = 3.14;

deepArray[1][1][0] = true;

int val0 = (int)obj[0];

double val1_0 = (double)obj[1][0];

bool val1_1_0 = (bool)obj[1][1][0];

</code>


Example 8 (Work with maps):

<code>

NsAppLink::NsSmartObjects::CSmartObject simpleMap;

simpleMap["name"] = "My name";

simpleMap["count"] = 10;

simpleMap["isValid"] = true;

std::string name = std::string)obj["name"];

int count =  (int)obj["count"];

bool isValid = (bool)obj["isValid"]);

NsAppLink::NsSmartObjects::CSmartObject deepMap;

deepMap["request"]["name"] = "My Request";

deepMap["request"]["id"] = 123;

deepMap["response"]["name"] = "My Response";

deepMap["response"]["id"] = 456;

deepMap["we"]["need"]["to"]["go"]["deeper"] = true;

std::string requestName = (std::string)deepMap["request"]["name"];

int requestId = (int)deepMap["request"]["id"];

std::string responseName = (std::string)deepMap["response"]["name"];

int responseId = (int)deepMap["response"]["id"];

deepFlag = (bool)deepMap["we"]["need"]["to"]["go"]["deeper"];

</code>

*/
