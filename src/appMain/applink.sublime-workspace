{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"respo",
				"responseString"
			],
			[
				"0x",
				"0x0A"
			],
			[
				"data",
				"dataSize"
			],
			[
				"frame",
				"frameSize"
			],
			[
				"rfco",
				"rfcommpayloadbuffer"
			],
			[
				"fra",
				"frameSize"
			],
			[
				"soc",
				"sockID"
			],
			[
				"getDev",
				"getDeviceAddr"
			],
			[
				"devices",
				"devicesFound"
			],
			[
				"De",
				"DeviceAddr"
			],
			[
				"mde",
				"mDeviceAddr"
			],
			[
				"Dev",
				"DeviceName"
			],
			[
				"mDe",
				"mDeviceName"
			],
			[
				"m",
				"mDeviceName"
			],
			[
				"mdev",
				"mDeviceAddr"
			],
			[
				"str",
				"string"
			],
			[
				"targetD",
				"targetDevID"
			],
			[
				"so",
				"sockid"
			],
			[
				"in",
				"include"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/C++/C++.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"sa",
				"File: Save All"
			],
			[
				"s",
				"Sort Lines"
			],
			[
				"fi",
				"File: Save All"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"sav",
				"File: Save All"
			],
			[
				"fil",
				"File: Save All"
			]
		],
		"width": 404.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/akara/projects/applink/git_repo/doc/readme.txt",
		"/home/akara/projects/applink/git_repo/doc/install.txt",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/src/JSONHandler.cpp",
		"/home/akara/projects/applink/git_repo/src/appMain/appMain.cpp",
		"/home/akara/projects/applink/git_repo/src/appMain/CBTAdapter.cpp",
		"/home/akara/projects/applink/git_repo/src/appMain/CBTAdapter.hpp",
		"/home/akara/projects/applink/git_repo/src/appMain/CMakeLists.txt",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/src/MobileRPCFactory.cpp",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/src/ProtocolHandler.cpp",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/src/MobileRPCMessage.cpp",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/RegisterAppInterfaceResponse.h",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/CMakeLists.txt",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/MobileRPCFactory.h",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/AudioStreamingState.h",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/OnHMIStatus.h",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/SystemContext.h",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/HMILevel.h",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/src/MessageGenerator/CMessage.cpp",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/src/main.cpp",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/src/BluetoothReader.hpp",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/include/ProtocolPacketHeader.hpp",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/src/BluetoothReader.cpp",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/transport/bt/Blob.hpp",
		"/home/akara/projects/applink/git_repo/src/components/JSONHandler/include/JSONHandler/JSONHandler.h",
		"/home/akara/projects/applink/git_repo/test/components/JSONHandler/main.cpp",
		"/home/akara/projects/applink/git_repo/test/components/JSONHandler/CMakeLists.txt",
		"/home/akara/projects/applink/git_repo/src/thirdPartyLibs/axisCore/include/ProtocolHandler.hpp",
		"/home/akara/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/akara/projects/applink/git_repo/src/appMain/appMain.hpp",
		"/usr/include/bluetooth/bluetooth.h",
		"/home/akara/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/akara/projects/bluezdemo/bths.c",
		"/home/akara/projects/applink/AppLinkServer.py",
		"/home/akara/.config/sublime-text-2/Packages/User/C.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"receiveData",
			"handleReceivedData",
			"sockID",
			"No socket opened!",
			"sockID",
			"no any devices",
			"perror",
			"sdp_list_t *r = response_list;\n\n    // go through each of the service records\n    for (; r; r = r->next ) {\n        sdp_record_t *rec = (sdp_record_t*) r->data;\n        sdp_list_t *proto_list;\n        \n        // get a list of the protocol sequences\n        if( sdp_get_access_protos( rec, &proto_list ) == 0 ) {\n        sdp_list_t *p = proto_list;\n\n        // go through each protocol sequence\n        for( ; p ; p = p->next ) {\n            sdp_list_t *pds = (sdp_list_t*)p->data;\n\n            // go through each protocol list of the protocol sequence\n            for( ; pds ; pds = pds->next ) {\n\n                // check the protocol attributes\n                sdp_data_t *d = (sdp_data_t*)pds->data;\n                int proto = 0;\n                for( ; d; d = d->next ) {\n                    switch( d->dtd ) { \n                        case SDP_UUID16:\n                        case SDP_UUID32:\n                        case SDP_UUID128:\n                            proto = sdp_uuid_to_proto( &d->val.uuid );\n                            break;\n                        case SDP_UINT8:\n                            if( proto == RFCOMM_UUID ) {\n                                printf(\"rfcomm channel: %d\\n\",d->val.int8);\n                            }\n                            break;\n                    }\n                }\n            }\n            sdp_list_free( (sdp_list_t*)p->data, 0 );\n        }\n        sdp_list_free( proto_list, 0 );\n\n        }\n\n        printf(\"found service record 0x%x\\n\", rec->handle);\n        sdp_record_free( rec );\n    }\n\n    sdp_close(session);\nreceived connection from",
			"bdaddr_any"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.unsaved_changes":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 191.0,
	"status_bar_visible": true
}
