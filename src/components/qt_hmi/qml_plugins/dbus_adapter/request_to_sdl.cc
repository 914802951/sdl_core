// Warning! This file is generated by './make_RequestToSDL_class.py'. Edit at your own risk.
/**
 * @file request_to_sdl.cc
 * @brief Generated class that process requests from qtHMI
 *
 * This file is a part of HMI D-Bus layer.
 */
// Copyright (c) 2014, Ford Motor Company
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following
// disclaimer in the documentation and/or other materials provided with the
// distribution.
//
// Neither the name of the Ford Motor Company nor the names of its contributors
// may be used to endorse or promote products derived from this software
// without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 'A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

#include "request_to_sdl.h"

RequestToSDL::RequestToSDL(QObject *parent) {
  QDBusConnection bus = QDBusConnection::sessionBus();
  Common = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.Common", bus, this);
  Buttons = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.Buttons", bus, this);
  BasicCommunication = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.BasicCommunication", bus, this);
  VR = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.VR", bus, this);
  TTS = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.TTS", bus, this);
  UI = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.UI", bus, this);
  Navigation = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.Navigation", bus, this);
  VehicleInfo = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.VehicleInfo", bus, this);
  SDL = new QDBusInterface("com.ford.sdl.core", "/", "com.ford.sdl.core.SDL", bus, this);
}

RequestToSDL::~RequestToSDL() {
  Common->deleteLater();
  Buttons->deleteLater();
  BasicCommunication->deleteLater();
  VR->deleteLater();
  TTS->deleteLater();
  UI->deleteLater();
  Navigation->deleteLater();
  VehicleInfo->deleteLater();
  SDL->deleteLater();
  this->deleteLater();
}

void RequestToSDL::SDL_ActivateApp(QString name, QVariant appID, QJSValue hmi_callback) {
  QList<QVariant> args;
  args << appID;
  new SDL_ActivateApp(SDL, name, args, hmi_callback);
}
void RequestToSDL::SDL_GetUserFriendlyMessage(QString name, QVariant messageCodes, QVariant language, QJSValue hmi_callback) {
  QList<QVariant> args;
  args << messageCodes;
  args << language;
  new SDL_GetUserFriendlyMessage(SDL, name, args, hmi_callback);
}
void RequestToSDL::SDL_GetListOfPermissions(QString name, QVariant appID, QJSValue hmi_callback) {
  QList<QVariant> args;
  args << appID;
  new SDL_GetListOfPermissions(SDL, name, args, hmi_callback);
}
void RequestToSDL::SDL_UpdateSDL(QString name, QJSValue hmi_callback) {
  QList<QVariant> args;
  new SDL_UpdateSDL(SDL, name, args, hmi_callback);
}
void RequestToSDL::SDL_GetStatusUpdate(QString name, QJSValue hmi_callback) {
  QList<QVariant> args;
  new SDL_GetStatusUpdate(SDL, name, args, hmi_callback);
}
void RequestToSDL::SDL_GetURLS(QString name, QVariant service, QJSValue hmi_callback) {
  QList<QVariant> args;
  args << service;
  new SDL_GetURLS(SDL, name, args, hmi_callback);
}
