// Warning! This file is generated by './make_HMIRequests_class.py'. Edit at your own risk.
/**
 * @file hmi_requests.h
 * @brief Generated class that process requests from qtHMI
 *
 * This file is a part of HMI D-Bus layer.
 */
// Copyright (c) 2014, Ford Motor Company
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following
// disclaimer in the documentation and/or other materials provided with the
// distribution.
//
// Neither the name of the Ford Motor Company nor the names of its contributors
// may be used to endorse or promote products derived from this software
// without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 'A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

#ifndef SRC_COMPONENTS_QTHMI_QMLMODELQT5_HMIREQUESTS_
#define SRC_COMPONENTS_QTHMI_QMLMODELQT5_HMIREQUESTS_

#include <QObject>
#include <QJSValue>
#include <QDBusPendingCall>
#include <QDBusPendingCallWatcher>
#include <QDBusPendingReply>
#include <QDBusAbstractInterface>
#include <QDBusInterface>
#include <QJSEngine>
#include "qml_dbus.h"

class HMIRequest: public QObject {
  Q_OBJECT
public:
  HMIRequest(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback);
protected:
  virtual void fillArgsList() = 0;
  QDBusPendingCallWatcher *watcher_;
  QJSValue hmi_callback_;

  template<typename T>
  QJSValue CreateQJSValue(T value) {
    return QJSValue(value);
  }

  template<typename T>
  QJSValue CreateQJSValue(QList<T> value) {
    QJSValue array = hmi_callback_.engine()->newArray();
    int i = 0;
    foreach (T item, value) {
      QJSValue value = CreateQJSValue(item);
      array.setProperty(i, value);
      ++i;
    }
    return array;
  }
private:
  QDBusInterface *interface_;
  QString name_;
  QList<QVariant> args_;
public slots:
  void invokeCallback();
};

template<>
QJSValue HMIRequest::CreateQJSValue(Common_UserFriendlyMessage value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_PermissionItem value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ServiceInfo value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TextField value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ButtonCapabilities value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_VehicleDataResult value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TouchCoord value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TouchEvent value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_PresetBankCapabilities value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_Image value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_SoftButton value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TTSChunk value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_HMIApplication value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_MenuParams value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_Choice value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_VrHelpItem value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TimeFormat value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TouchEventCapabilities value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ImageResolution value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ScreenParams value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ImageField value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_DisplayCapabilities value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_SoftButtonCapabilities value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_AudioPassThruCapabilities value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_Coordinate value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TextFieldStruct value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_KeyboardProperties value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_Turn value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_VehicleType value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_DeviceInfo value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_GPSData value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_SingleTireStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_DIDResult value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_HeadLampStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_TireStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_BeltStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_BodyInformation value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_DeviceStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ECallInfo value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_AirbagStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_EmergencyEvent value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_ClusterModeStatus value);

template<>
QJSValue HMIRequest::CreateQJSValue(Common_MyKey value);

class SDL_ActivateApp: public HMIRequest {
  Q_OBJECT
 public:
  SDL_ActivateApp(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback):
    HMIRequest(interface, name, args, hmi_callback) {}
 private:
  void fillArgsList();
};

class SDL_GetUserFriendlyMessage: public HMIRequest {
  Q_OBJECT
 public:
  SDL_GetUserFriendlyMessage(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback):
    HMIRequest(interface, name, args, hmi_callback) {}
 private:
  void fillArgsList();
};

class SDL_GetListOfPermissions: public HMIRequest {
  Q_OBJECT
 public:
  SDL_GetListOfPermissions(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback):
    HMIRequest(interface, name, args, hmi_callback) {}
 private:
  void fillArgsList();
};

class SDL_UpdateSDL: public HMIRequest {
  Q_OBJECT
 public:
  SDL_UpdateSDL(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback):
    HMIRequest(interface, name, args, hmi_callback) {}
 private:
  void fillArgsList();
};

class SDL_GetStatusUpdate: public HMIRequest {
  Q_OBJECT
 public:
  SDL_GetStatusUpdate(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback):
    HMIRequest(interface, name, args, hmi_callback) {}
 private:
  void fillArgsList();
};

class SDL_GetURLS: public HMIRequest {
  Q_OBJECT
 public:
  SDL_GetURLS(QDBusInterface *interface, QString name, QList<QVariant> args, QJSValue hmi_callback):
    HMIRequest(interface, name, args, hmi_callback) {}
 private:
  void fillArgsList();
};

#endif SRC_COMPONENTS_QTHMI_QMLMODELQT5_HMIREQUESTS_
