<?xml version="1.0" standalone="yes"?>

<!--
* Copyright (c) 2013, Ford Motor Company
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided with the
 * distribution.
 *
 * Neither the name of the Ford Motor Company nor the names of its contributors
 * may be used to endorse or promote products derived from this software
 * without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE. -->


<interfaces name="SmartDeviceLink HMI API">

<interface name="Common" version="1.0" date="2013-04-12">

<enum name="Result">
	<element name="SUCCESS" value="0"/>
    <element name="UNSUPPORTED_REQUEST" value="1"/>
    <element name="UNSUPPORTED_RESOURCE" value="2"/>
    <element name="DISALLOWED" value="3"/>
    <element name="REJECTED" value="4"/>
    <element name="ABORTED" value="5"/>
    <element name="IGNORED" value="6"/>
    <element name="RETRY" value="7"/>
    <element name="IN_USE"  value="8"/>
    <element name="DATA_NOT_AVAILABLE" value="9"/>
    <element name="TIMED_OUT" value="10"/>
    <element name="INVALID_DATA" value="11"/>
    <element name="CHAR_LIMIT_EXCEEDED" value="12"/>
    <element name="INVALID_ID" value="13"/>
    <element name="DUPLICATE_NAME" value="14"/>
    <element name="APPLICATION_NOT_REGISTERED" value="15"/>
    <element name="WRONG_LANGUAGE" value="16"/>
    <element name="OUT_OF_MEMORY" value="17"/>
    <element name="TOO_MANY_PENDING_REQUESTS" value="18"/>
    <element name="NO_APPS_REGISTERED" value="19"/>
    <element name="NO_DEVICES_CONNECTED" value="20"/>
    <element name="WARNINGS" value="21"/>
    <element name="GENERIC_ERROR" value="22"/>
    <element name="USER_DISALLOWED" value="23"/>
</enum>

<enum name="ButtonName">
    <description>Defines the hard (physical) and soft (touchscreen) buttons available from SYNC</description>
    <element name="OK"/>
    <element name="SEEKLEFT"/>
    <element name="SEEKRIGHT"/>
    <element name="TUNEUP"/>
    <element name="TUNEDOWN"/>
    <element name="PRESET_0"/>
    <element name="PRESET_1"/>
    <element name="PRESET_2"/>
    <element name="PRESET_3"/>
    <element name="PRESET_4"/>
    <element name="PRESET_5"/>
    <element name="PRESET_6"/>
    <element name="PRESET_8"/>
    <element name="PRESET_9"/>
    <element name="CUSTOM_BUTTON"/>
</enum>

<enum name="ButtonEventMode">
    <element name="BUTTONUP">
        <description>A button has been released up</description>
    </element>
    <element name="BUTTONDOWN">
        <description>A button has been pressed down</description>
    </element>
</enum>

<enum name="ButtonPressMode">
    <element name="LONG">
        <description>A button was released, after it was pressed for a long time. Actual timing is defined by Sync and may vary</description>
    </element>
    <element name="SHORT">
        <description>A button was released, after it was pressed for a short time. Actual timing is defined by Sync and may vary</description>
    </element>
</enum>

 <enum name="Language">
     <element name="EN-US" internal_name="EN_US">
      <description>US English</description>
    </element>
    <element name="ES-MX" internal_name="ES_MX">
      <description>Mexican Spanish</description>
    </element>
    <element name="FR-CA" internal_name="FR_CA">
      <description>Canadian French</description>
    </element>
    <element name="DE-EU" internal_name="DE">
      <description>EU German</description>
    </element>
     <element name="ES-EU" internal_name="ES">
      <description>EU Spanish</description>
    </element>
    <element name="EN-EU" internal_name="EN_GB">
      <description>UK English</description>
    </element>
     <element name="RU-RU" internal_name="RU">
      <description>Russian</description>
    </element>
     <element name="TR-TR" internal_name="TR">
      <description>Turkish</description>
    </element>
     <element name="PL-EU" internal_name="PL_EU">
      <description>EU Polish</description>
    </element>
     <element name="FR-EU" internal_name="FR">
      <description>French</description>
    </element>
     <element name="IT-EU" internal_name="IT">
      <description>Italian</description>
    </element>
     <element name="SV-EU" internal_name="SV_EU">
      <description>Swedish</description>
    </element>
     <element name="PT-EU" internal_name="PT">
      <description>Portuguese</description>
    </element>
     <element name="NL-EU" internal_name="NL">
      <description>Dutch (Standard)</description>
    </element>
     <element name="EN-AU" internal_name="EN_AU">
      <description>Australian English</description>
    </element>
     <element name="ZH-CN" internal_name="ZH_CN">
      <description>Chinese (Mandarin)</description>
    </element>
     <element name="ZH-TW" internal_name="ZH_TW">
      <description>Taiwanese (Mandarin)</description>
    </element>
     <element name="JA-JP" internal_name="JA">
      <description>Japanese</description>
    </element>
     <element name="AR-SA" internal_name="AR_SA">
      <description>Arabic</description>
    </element>
     <element name="KO-KR" internal_name="KO">
      <description>Korean</description>
    </element>
</enum>

<enum name="SoftButtonType">
  <description>Contains information about the SoftButton capabilities.</description>
  <element name="TEXT" internal_name="SBT_TEXT"/>
  <element name="IMAGE" internal_name="SBT_IMAGE"/>
  <element name="BOTH" internal_name="SBT_BOTH"/>
</enum>

<enum name="SystemAction">
  <description>Enumeration that describes system actions that can be triggered.</description>
  <element name="DEFAULT_ACTION">
    <description>Default action occurs.  Standard behavior (e.g. SoftButton clears overlay).</description>
  </element>
  <element name="STEAL_FOCUS">
    <description>App is brought into HMI_FULL.</description>
  </element>
  <element name="KEEP_CONTEXT">
    <description>Current system context is maintained.  An overlay is persisted even though a SoftButton has been pressed and the notification sent.</description>
  </element>
</enum>

<enum name="AppHMIType">
  <description>Enumeration listing possible app types.</description>
  <element name="DEFAULT" />
  <element name="COMMUNICATION" />
  <element name="MEDIA" />
  <element name="MESSAGING" />
  <element name="NAVIGATION" />
  <element name="INFORMATION" />
  <element name="SOCIAL" />
  <element name="BACKGROUND_PROCESS" />
  <element name="TESTING" />
  <element name="SYSTEM" />
</enum>

<enum name="DeactivateReason">
  <description>Enum of reasons of user navigating from application used by HMI.</description>
  <element name="AUDIO">
      <description>Navigated to audio(radio, etc)</description>
  </element>
  <element name="PHONECALL">
      <description>Navigated to make a call.</description>
  </element>
  <element name="NAVIGATIONMAP">
      <description>Navigated to navigation screen.</description>
  </element>
  <element name="PHONEMENU">
      <description>Navigated to phone menu.</description>
  </element>
  <element name="SYNCSETTINGS">
      <description>Navigated to settings menu.</description>
  </element>
  <element name="GENERAL">
      <description>Other screens navigation apart from other mobile app.</description>
  </element>
</enum>

<enum name="ClockUpdateMode">
  <description>Describes how the media clock timer should behave on the platform</description>
  <element name="COUNTUP" />
  <description>Starts the media clock timer counting upwards, as in time elapsed.</description>
  <element name="COUNTDOWN" />
  <description>Starts the media clock timer counting downwards, as in time remaining.</description>
  <element name="PAUSE" />
  <description>Pauses the media clock timer</description>
  <element name="RESUME" />
  <description>Resume the media clock timer</description>
  <element name="CLEAR" />
  <description>Clears the media clock timer (previously done through Show->mediaClock)</description>
</enum>

<enum name="SystemContext">
  <description>Enumeration that describes possible contexts an app's HMI might be in.</description>
  <description>Communicated to whichever app is in HMI FULL, except Alert.</description>
  <element name="MAIN" internal_name="SYSCTXT_MAIN">
    <description>The app's persistent display (whether media/non-media/navigation) is fully visible onscreen.</description>
  </element>
  <element name="VRSESSION" internal_name="SYSCTXT_VRSESSION">
    <description>The system is currently in a VR session (with whatever dedicated VR screen being overlaid onscreen).</description>
  </element>
  <element name="MENU" internal_name="SYSCTXT_MENU">
    <description>The system is currently displaying a system or in-App menu onscreen.</description>
  </element>
  <element name="HMI_OBSCURED" internal_name="SYSCTXT_HMI_OBSCURED">
    <description>The app's display HMI is currently being obscured by either a system or other app's overlay.</description>
  </element>
  <element name="ALERT" internal_name="SYSCTXT_ALERT">
    <description>Broadcast only to whichever app has an alert currently being displayed.</description>
  </element>
</enum>

<enum name="HmiZoneCapabilities">
  <description>Contains information about the HMI zone capabilities.</description>
  <description>For future use.</description>
  <element name="FRONT" />
  <element name="BACK" />
</enum>

<enum name="TBTState">
  <description>Enumeration that describes possible states of turn-by-turn client or SmartDeviceLink app.</description>
  <element name="ROUTE_UPDATE_REQUEST" />
  <element name="ROUTE_ACCEPTED" />
  <element name="ROUTE_REFUSED" />
  <element name="ROUTE_CANCELLED" />
  <element name="ETA_REQUEST" />
  <element name="NEXT_TURN_REQUEST" />
  <element name="ROUTE_STATUS_REQUEST" />
  <element name="ROUTE_SUMMARY_REQUEST" />
  <element name="TRIP_STATUS_REQUEST" />
  <element name="ROUTE_UPDATE_REQUEST_TIMEOUT" />
</enum>

<enum name="ApplicationsCloseReason">
  <description>Describes reason for exiting application.</description>
  <element name="IGNITION_OFF" />
  <element name="MASTER_RESET" />
  <element name="FACTORY_DEFAULTS" />
</enum>

<enum name="DisplayType">
    <description>See DAES for further infos regarding the displays</description>
    <element name="CID"/>
    <element name="TYPE2" />
    <element name="TYPE5" />
    <element name="NGN" />
    <element name="GEN2_8_DMA" />
    <element name="GEN2_6_DMA" />
    <element name="MFD3" />
    <element name="MFD4" />
    <element name="MFD5" />
  </enum>

<enum name="ImageType">
  <description>Contains information about the type of image.</description>
  <element name="STATIC" />
  <element name="DYNAMIC" />
</enum>

<enum name="TextFieldName">
  <element name="mainField1">
    <description>The first line of first set of main fields of the persistent display; applies to "Show"</description>
  </element>
  <element name="mainField2">
    <description>The second line of first set of main fields of the persistent display; applies to "Show"</description>
  </element>
  <element name="mainField3">
    <description>The first line of second set of main fields of persistent display; applies to "Show"</description>
  </element>
  <element name="mainField4">
    <description>The second line of second set of main fields of the persistent display; applies to "Show"</description>
  </element>
  <element name="statusBar">
    <description>The status bar on Nav; applies to "Show"</description>
  </element>
  <element name="mediaClock">
    <description>Text value for MediaClock field; applies to "Show"</description>
  </element>
  <element name="mediaTrack">
    <description>The track field of NGN type ACMs. This field is only available for media applications; applies to "Show"</description>
  </element>
  <element name="alertText1">
    <description>The first line of the alert text field; applies to "Alert"</description>
  </element>
  <element name="alertText2">
    <description>The second line of the alert text field; applies to "Alert"</description>
  </element>
  <element name="alertText3">
    <description>The third line of the alert text field; applies to "Alert"</description>
  </element>
  <element name="scrollableMessageBody">
    <description>Long form body of text that can include newlines and tabs; applies to "ScrollableMessage"</description>
  </element>
  <element name="initialInteractionText">
    <description> First line suggestion for a user response (in the case of VR enabled interaction</description>
  </element>
  <element name="navigationText1">
    <description> First line of navigation text</description>
  </element>
  <element name="navigationText2">
    <description> Second line of navigation text</description>
  </element>
  <element name="ETA">
    <description> Estimated Time of Arrival time for navigation</description>
  </element>
  <element name="totalDistance">
    <description> Total distance to destination for navigation</description>
  </element>
  <element name="navigationText">
    <description>Navigation text for UpdateTurnList.</description>
  </element>
  <element name="audioPassThruDisplayText1">
    <description> First line of text for audio pass thru</description>
  </element>
  <element name="audioPassThruDisplayText2">
    <description> Second line of text for audio pass thru</description>
  </element>
  <element name="sliderHeader">
    <description> Header text for slider</description>
  </element>
  <element name="sliderFooter">
    <description> Footer text for slider</description>
  </element>
  <element name="notificationText">
    <description>Text of notification.</description>
  </element>
</enum>

<enum name="TextAlignment">
  <description>The list of possible alignments, left, right, or centered</description>
  <element name="LEFT_ALIGNED" />
  <element name="RIGHT_ALIGNED" />
  <element name="CENTERED" />
</enum>

<enum name="DriverDistractionState">
  <description>Enumeration that describes possible states of driver distraction.</description>
  <element name="DD_ON" />
  <element name="DD_OFF" />
</enum>

<enum name="MediaClockFormat">
  <element name="CLOCK1">
    <description>
      minutesFieldWidth = 2;minutesFieldMax = 19;secondsFieldWidth = 2;secondsFieldMax = 99;maxHours = 19;maxMinutes = 59;maxSeconds = 59;
      used for Type II and CID headunits
    </description>
  </element>
  <element name="CLOCK2">
    <description>
      minutesFieldWidth = 3;minutesFieldMax = 199;secondsFieldWidth = 2;secondsFieldMax = 99;maxHours = 59;maxMinutes = 59;maxSeconds = 59;
    used for Type V headunit
  </description>
  </element>
  <element name="CLOCK3">
    <description>
      minutesFieldWidth = 2;minutesFieldMax = 59;secondsFieldWidth = 2;secondsFieldMax = 59;maxHours = 9;maxMinutes = 59;maxSeconds = 59;
    used for GEN1.1 MFD3/4/5 headunits
  </description>
  </element>
  <element name="CLOCKTEXT1">
    <description>
      5 characters possible
      Format:      1|sp   c   :|sp   c   c
      1|sp : digit "1" or space
      c    : character out of following character set: sp|0-9|[letters, see TypeII column in XLS. See [@TODO: create file ref]]
      :|sp : colon or space
    used for Type II headunit
  </description>
  </element>
  <element name="CLOCKTEXT2">
    <description>
      5 chars possible
      Format:      1|sp   c   :|sp   c   c
      1|sp : digit "1" or space
      c    : character out of following character set: sp|0-9|[letters, see CID column in XLS. See [@TODO: create file ref]]
      :|sp : colon or space
    used for CID headunit
    NOTE: difference between CLOCKTEXT1 and CLOCKTEXT2 is the supported character set
  </description>
  </element>
  <element name="CLOCKTEXT3">
    <description>
      6 chars possible
      Format:      1|sp   c   c   :|sp   c   c
      1|sp : digit "1" or space
      c    : character out of following character set: sp|0-9|[letters, see Type 5 column in XLS]. See [@TODO: create file ref]
      :|sp : colon or space
    used for Type V headunit
  </description>
  </element>
  <element name="CLOCKTEXT4">
    <description>
      6 chars possible
      Format:      c   :|sp   c   c   :   c   c
      :|sp : colon or space
      c    : character out of following character set: sp|0-9|[letters].
    used for GEN1.1 MFD3/4/5 headunits
  </description>
  </element>
</enum>

<!--IVI part-->
<enum name="ComponentVolumeStatus">
  <description>The volume status of a vehicle component.</description>
  <element name="UNKNOWN" internal_name="CVS_UNKNOWN">
  </element>
  <element name="NORMAL" internal_name="CVS_NORMAL">
  </element>
  <element name="LOW" internal_name="CVS_LOW">
  </element>
  <element name="FAULT" internal_name="CVS_FAULT">
  </element>
  <element name="ALERT"  internal_name="CVS_ALERT">
  </element>
  <element name="NOT_SUPPORTED" internal_name="CVS_NOT_SUPPORTED">
  </element>
</enum>

 <enum name="PRNDL">
  <description>The selected gear.</description>
  <element name="PARK">
    <description>Parking</description>
  </element>
  <element name="REVERSE">
    <description>Reverse gear</description>
  </element>
  <element name="NEUTRAL">
    <description>No gear</description>
  </element>
  <element name="DRIVE">
  </element>
  <element name="SPORT">
    <description>Drive Sport mode</description>
  </element>
  <element name="LOWGEAR">
    <description>1st gear hold</description>
  </element>
  <element name="FIRST">
  </element>
  <element name="SECOND">
  </element>
  <element name="THIRD">
  </element>
  <element name="FOURTH">
  </element>
  <element name="FIFTH">
  </element>
  <element name="SIXTH">
  </element>
</enum>

<enum name="VehicleDataEventStatus">
  <description>Reflects the status of a vehicle data event; e.g. a seat belt event status.</description>
  <element name="NO_EVENT" internal_name="VDES_NO_EVENT">
  </element>
  <element name="NO" internal_name="VDES_NO">
  </element>
  <element name="YES" internal_name="VDES_YES">
  </element>
  <element name="NOT_SUPPORTED" internal_name="VDES_NOT_SUPPORTED">
  </element>
  <element name="FAULT" internal_name="VDES_FAULT">
  </element>
</enum>

<enum name="VehicleDataStatus">
  <description>Reflects the status of a binary vehicle data item.</description>
  <element name="NO_DATA_EXISTS" internal_name="VDS_NO_DATA_EXISTS">
  </element>
  <element name="OFF" internal_name="VDS_OFF">
  </element>
  <element name="ON" internal_name="VDS_ON">
  </element>
</enum>

<enum name="IgnitionStableStatus">
  <description>Reflects the ignition switch stability.</description>
  <element name="IGNITION_SWITCH_NOT_STABLE">
  </element>
  <element name="IGNITION_SWITCH_STABLE">
  </element>
  <element name="MISSING_FROM_TRANSMITTER">
  </element>
</enum>

<enum name="IgnitionStatus">
  <description>Reflects the status of ignition.</description>
  <element name="UNKNOWN" internal_name="IS_UNKNOWN">
  </element>
  <element name="OFF" internal_name="IS_OFF">
  </element>
  <element name="ACCESSORY" internal_name="IS_ACCESSORY">
  </element>
  <element name="RUN" internal_name="IS_RUN">
  </element>
  <element name="START" internal_name="IS_START">
  </element>
  <element name="INVALID" internal_name="IS_INVALID">
  </element>
</enum>

<enum name="DeviceLevelStatus">
  <description>Reflects the reported battery status of the connected device, if reported.</description>
  <element name="ZERO_LEVEL_BARS">
  </element>
  <element name="ONE_LEVEL_BARS">
  </element>
  <element name="TWO_LEVEL_BARS">
  </element>
  <element name="THREE_LEVEL_BARS">
  </element>
  <element name="FOUR_LEVEL_BARS">
  </element>
  <element name="NOT_PROVIDED">
  </element>
</enum>

<enum name="PrimaryAudioSource">
  <description>Reflects the current primary audio source (if selected).</description>
  <element name="NO_SOURCE_SELECTED">
  </element>
  <element name="USB">
  </element>
  <element name="USB2">
  </element>
  <element name="BLUETOOTH_STEREO_BTST">
  </element>
  <element name="LINE_IN">
  </element>
  <element name="IPOD">
  </element>
  <element name="MOBILE_APP">
  </element>
</enum>

<enum name="VehicleDataNotificationStatus">
  <description>Reflects the status of a vehicle data notification.</description>
  <element name="NOT_SUPPORTED" internal_name="VDNS_NOT_SUPPORTED">
  </element>
  <element name="NORMAL" internal_name="VDNS_NORMAL">
  </element>
  <element name="ACTIVE" internal_name="VDNS_ACTIVE">
  </element>
</enum>

<enum name="CompassDirection">
  <description>The list of potential compass directions</description>
  <element name="NORTH">
  </element>
  <element name="NORTHWEST">
  </element>
  <element name="WEST">
  </element>
  <element name="SOUTHWEST">
  </element>
  <element name="SOUTH">
  </element>
  <element name="SOUTHEAST">
  </element>
  <element name="EAST">
  </element>
  <element name="NORTHEAST">
  </element>
</enum>

<enum name="Dimension">
  <description>The supported dimensions of the GPS</description>
  <element name="NO_FIX" internal_name="Dimension_NO_FIX">
    <description>No GPS at all</description>
  </element>
  <element name="2D" internal_name="Dimension_2D">
    <description>Longitude and lattitude</description>
  </element>
  <element name="3D" internal_name="Dimension_3D">
    <description>Longitude and lattitude and altitude</description>
  </element>
</enum>

<enum name="WarningLightStatus">
  <description>Reflects the status of a cluster instrument warning light.</description>
  <element name="OFF" internal_name="WLS_OFF">
  </element>
  <element name="ON" internal_name="WLS_ON">
  </element>
  <element name="FLASH" internal_name="WLS_FLASH">
  </element>
</enum>

<enum name="VehicleDataResultCode">
  <description>Enumeration that describes possible result codes of a vehicle data entry request.</description>
  <element name="SUCCESS" internal_name="VDRC_SUCCESS"/>
  <element name="TRUNCATED_DATA" internal_name="VDRC_TRUNCATED_DATA"/>
  <element name="DISALLOWED" internal_name="VDRC_DISALLOWED"/>
  <element name="USER_DISALLOWED" internal_name="VDRC_USER_DISALLOWED"/>
  <element name="INVALID_ID" internal_name="VDRC_INVALID_ID"/>
  <element name="VEHICLE_DATA_NOT_AVAILABLE" internal_name="VDRC_DATA_NOT_AVAILABLE"/>
  <element name="DATA_ALREADY_SUBSCRIBED" internal_name="VDRC_DATA_ALREADY_SUBSCRIBED"/>
  <element name="DATA_NOT_SUBSCRIBED" internal_name="VDRC_DATA_NOT_SUBSCRIBED"/>
  <element name="IGNORED" internal_name="VDRC_IGNORED"/>
</enum>

<enum name="WiperStatus">
  <description>Reflects the status of the wipers.</description>
  <element name="OFF" />
  <element name="AUTO_OFF" />
  <element name="OFF_MOVING" />
  <element name="MAN_INT_OFF" />
  <element name="MAN_INT_ON" />
  <element name="MAN_LOW" />
  <element name="MAN_HIGH" />
  <element name="MAN_FLICK" />
  <element name="WASH" />
  <element name="AUTO_LOW" />
  <element name="AUTO_HIGH" />
  <element name="COURTESYWIPE" />
  <element name="AUTO_ADJUST" />
  <element name="STALLED" />
  <element name="NO_DATA_EXISTS" />
</enum>

<!-- End of IVI part-->

<struct name="ButtonCapabilities">
    <description>Contains information about a button's capabilities.</description>
    <param name="name" type="Common.ButtonName" mandatory="true"/>
    <param name="shortPressAvailable" type="Boolean" mandatory="true">
        <description>The button supports a short press. Whenever the button is pressed short, onButtonPressed(SHORT) will be invoked.</description>
    </param>
    <param name="longPressAvailable" type="Boolean" mandatory="true">
        <description>The button supports a LONG press. Whenever the button is pressed long, onButtonPressed(LONG) will be invoked.</description>
    </param>
    <param name="upDownAvailable" type="Boolean" mandatory="true">
        <description>The button supports "button down" and "button up". Whenever the button is pressed, onButtonEvent(DOWN) will be invoked. Whenever the button is released, onButtonEvent(UP) will be invoked.</description>
    </param>
</struct>

<struct name="PresetBankCapabilities">
    <description>Contains information about on-screen preset capabilities. </description>
    <param name="onScreenPresetsAvailable" type="Boolean" mandatory="true">
        <description>Onscreen custom presets are available.</description>
    </param>
</struct>

<struct name="Image">
  <param name="value" maxlength="65535" type="String" mandatory="true">
    <description>Either the static hex icon value or the binary image file name identifier (sent by PutFile).</description>
  </param>
  <param name="imageType" type="ImageType">
    <description>Describes, whether it is a static or dynamic image.</description>
  </param>
</struct>

<struct name="SoftButton">
    <param name="type" type="Common.SoftButtonType" mandatory="true">
      <description>Describes, whether it is text, highlighted text, icon, or dynamic image. See softButtonType</description>
    </param>
    <param name="text" maxlength="500" type="String" mandatory="false">
      <description>Optional text to display (if defined as TEXT or BOTH)</description>
    </param>
    <param name="image" type="Common.Image" mandatory="false">
      <description>Optional image struct for SoftButton (if defined as IMAGE or BOTH)</description>
    </param>
    <param name="isHighlighted" type="Boolean" mandatory="false">
      <description>True, if highlighted</description>
      <description>False, if not highlighted</description>
    </param>
    <param name="softButtonID" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
      <description>Value which is returned via OnButtonPress / OnButtonEvent</description>
    </param>
    <param name="systemAction" type="Common.SystemAction" mandatory="false">
      <description>Parameter indicating whether selecting a SoftButton shall call a specific system action.  This is intended to allow Notifications to bring the callee into full / focus; or in the case of persistent overlays, the overlay can persist when a SoftButton is pressed.</description>
    </param>
 </struct>

<struct name="TTSChunk">
    <description>A TTS chunk, that consists of the text/phonemes to speak</description>
    <param name="text" type="String" mandatory="true" maxlength="500">
        <description>The text or phonemes to speak.</description>
    </param>
</struct>

<struct name="HMIApplication">
    <description>Data type containing information about application needed by HMI.</description>
    <param name="appName" type="String" maxlength="100" mandatory="true">
      <description>The mobile application name, e.g. "Ford Drive Green".</description>
    </param>
    <param name="ngnMediaScreenAppName" type="String" maxlength="100" mandatory="false">
      <description>Provides an abbreviated version of the app name (if needed), that will be displayed on the NGN media screen.</description>
      <description>If not provided, the appName is used instead (and will be truncated if too long)</description>
    </param>
    <param name="icon" type="String" mandatory="false">
      <description>Path to application icon.</description>
    </param>
    <param name="deviceName" type="String" mandatory="true">
      <description>Name of device on which provided application is running.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>Unique(during ignition cycle) id of application. To be used in all commands sent by application for identification.</description>
    </param>
    <param name="hmiDisplayLanguageDesired" type="Common.Language" mandatory="true">
      <description>Current app’s expected display language</description>
    </param>
    <param name="isMediaApplication" type="Boolean" mandatory="true">
      <description>Indicates if the application is a media or a non-media application.</description>
      <description>Only media applications will be able to stream audio to Sync that is audible outside of the BT media source.</description>
    </param>
    <param name="appType" type="Common.AppHMIType" minsize="1" maxsize="100" array="true" mandatory="false">
      <description>List of all applicable app types stating which classifications to be given to the app.</description>
      <description>e.g. for platforms like GEN2, this will determine which "corner(s)" the app can populate.</description>
    </param>
</struct>

<struct name="MenuParams">
  <param name="parentID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
    <description>unique ID of the sub menu, the command will be added to.</description>
    <description>If not provided, it will be provided to the top level of the in application menu.</description>
  </param>
  <param name="position" type="Integer" minvalue="0" maxvalue="1000" mandatory="false">
    <description>Position within the items that are are at top level of the in application menu.</description>
    <description>0 will insert at the front.</description>
    <description>1 will insert at the second position.</description>
    <description>if position is greater or equal than the number of items on top level, the sub menu will be appended to the end.</description>
    <description>If this param was omitted the entry will be added at the end.</description>
  </param>
  <param name="menuName" type="String" maxlength="500" mandatory="true">
    <description>Text to show in the menu for this sub menu.</description>
  </param>
</struct>

<struct name="Choice">
  <description>A choice is an option given to the user which can be selected either by menu, or through voice recognition system.</description>
  <param name="choiceID" type="Integer" minvalue="0" maxvalue="65535" mandatory="true"/>
  <param name="menuName" type="String" maxlength="500" mandatory="false"/>
  <param name="image" type="Common.Image" mandatory="false"/>
</struct>

<struct name="VrHelpItem">
  <param name="text" maxlength="500" type="String">
    <description>Text to display for VR Help item</description>
  </param>
  <param name="image" type="Common.Image">
    <description>Image struct for VR Help item</description>
  </param>
  <param name="position" type="Integer" minvalue="1" maxvalue="8">
    <description>Position to display item in VR Help list</description>
  </param>
</struct>

<struct name="TimeFormat">
  <param name="hours" type="Integer" minvalue="0" maxvalue="59">
    <description>The hour of the media clock.</description>
    <description>Some radios only support a max of 19 hours. If out of range, it will be rejected.</description>
  </param>
  <param name="minutes" type="Integer" minvalue="0" maxvalue="59" />
  <param name="seconds" type="Integer" minvalue="0" maxvalue="59" />
</struct>

<struct name="DisplayCapabilities">
  <description>Contains information about the display capabilities.</description>
  <param name="displayType" type="Common.DisplayType">
    <description>The type of the display. See DisplayType</description>
  </param>
  <param name="textFields" type="Common.TextFieldName" minsize="1" maxsize="100" array="true">
    <description>A set of all fields that support text data. See TextFieldName</description>
  </param>
  <param name="mediaClockFormats" type="Common.MediaClockFormat" minsize="1" maxsize="100" array="true">
    <description>A set of all supported formats of the media clock. See MediaClockFormat</description>
  </param>
  <param name="graphicSupported" type="Boolean">
      <description>The display's persistent screen supports referencing image.</description>
    </param>
</struct>

<struct name="SoftButtonCapabilities">
  <description>Contains information about a SoftButton's capabilities.</description>
  <param name="shortPressAvailable" type="Boolean">
    <description>The button supports a short press.</description>
    <description>Whenever the button is pressed short, onButtonPressed( SHORT) will be invoked.</description>
  </param>
  <param name="longPressAvailable" type="Boolean">
    <description>The button supports a LONG press.</description>
    <description>Whenever the button is pressed long, onButtonPressed( LONG) will be invoked.</description>
  </param>
  <param name="upDownAvailable" type="Boolean">
    <description>The button supports "button down" and "button up".</description>
    <description>Whenever the button is pressed, onButtonEvent( DOWN) will be invoked.</description>
    <description>Whenever the button is released, onButtonEvent( UP) will be invoked.</description>
  </param>
  <param name="imageSupported" type="Boolean">
    <description>The button supports referencing a static or dynamic image.</description>
  </param>
</struct>

<struct name="TextFieldStruct">
  <param name="fieldName" type="TextFieldName" mandatory="true"/>
  <param name="fieldText" type="String" maxlength="500" mandatory="true"/>
</struct>

<struct name="Turn">
  <param name="navigationText" type="TextFieldStruct" mandatory="false">
    <description>Uses navigationText from TextFieldStruct.</description>
  </param>
  <param name="turnIcon" type="Common.Image" mandatory="false">
  </param>
</struct>

<struct name="VehicleType">
  <param name="make" type="String" maxlength="500" mandatory="false">
    <description>Make of the vehicle</description>
    <description>e.g. Ford</description>
  </param>
  <param name="model" type="String" maxlength="500" mandatory="false">
    <description>Model of the vehicle</description>
    <description>e.g. Fiesta</description>
  </param>
  <param name="modelYear" type="String" maxlength="500" mandatory="false">
    <description>Model Year of the vehicle</description>
    <description>e.g. 2013</description>
  </param>
  <param name="trim" type="String" maxlength="500" mandatory="false">
    <description>Trim of the vehicle</description>
    <description>e.g. SE</description>
  </param>
</struct>

<struct name="DeviceInfo">
  <param name="name" type="String" mandatory="true"/>
  <param name="id" type="Integer" mandatory="true"/>
</struct>

<!--IVI part-->
<struct name="GPSData">
  <description>Struct with the GPS data.</description>
  <param name="longitudeDegrees" type="Float" minvalue="-180" maxvalue="180">
  </param>
  <param name="latitudeDegrees" type="Float" minvalue="-90" maxvalue="90">
  </param>
  <param name="utcYear" type="Integer" minvalue="2010" maxvalue="2100">
    <description>The current UTC year.</description>
  </param>
  <param name="utcMonth" type="Integer" minvalue="1" maxvalue="12">
    <description>The current UTC month.</description>
  </param>
  <param name="utcDay" type="Integer" minvalue="1" maxvalue="31">
    <description>The current UTC day.</description>
  </param>
  <param name="utcHours" type="Integer" minvalue="0" maxvalue="23">
    <description>The current UTC hour.</description>
  </param>
  <param name="utcMinutes" type="Integer" minvalue="0" maxvalue="59">
    <description>The current UTC minute.</description>
  </param>
  <param name="utcSeconds" type="Integer" minvalue="0" maxvalue="59">
    <description>The current UTC second.</description>
  </param>
  <param name="compassDirection" type="CompassDirection">
    <description>See CompassDirection.</description>
  </param>
  <param name="pdop" type="Float" minvalue="0" maxvalue="10">
    <description>PDOP.</description>
  </param>
  <param name="hdop" type="Float" minvalue="0" maxvalue="10">
    <description>HDOP.</description>
  </param>
  <param name="vdop" type="Float" minvalue="0" maxvalue="10">
    <description>VDOP.</description>
  </param>
  <param name="actual" type="Boolean">
    <description>
      True, if actual.
      False, if infered.
    </description>
  </param>
  <param name="satellites" type="Integer" minvalue="0" maxvalue="31">
    <description>Number of satellites in view</description>
  </param>
  <param name="dimension" type="Dimension">
    <description>See Dimension</description>
  </param>
  <param name="altitude" type="Float" minvalue="-10000" maxvalue="10000">
    <description>Altitude in meters</description>
  </param>
<param name="heading" type="Float" minvalue="0" maxvalue="359.99">
    <description>The heading. North is 0. Resolution is 0.01</description>
  </param>
  <param name="speed" type="Float" minvalue="0" maxvalue="500">
    <description>The speed in KPH</description>
  </param>
</struct>

<struct name="SingleTireStatus">
  <param name="status" type="ComponentVolumeStatus">
    <description>See ComponentVolumeStatus.</description>
</param>
</struct>

<struct name="DIDResult">
  <description>Individual requested DID result and data</description>
  <param name="resultCode" type="VehicleDataResultCode">
    <description>Individual DID result code.</description>
  </param>
  <param name="didLocation" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
    <description>Location of raw data from vehicle data DID</description>
  </param>
  <param name="data" type="String" maxlength="5000" mandatory="false">
    <description>Raw DID-based data returned for requested element.</description>
  </param>
</struct>

<struct name="HeadLampStatus">
  <param name="lowBeamsOn" type="Boolean">
    <description>Status of the low beam lamps.  References signal "HeadLampLoActv_B_Stat".</description>
</param>
  <param name="highBeamsOn" type="Boolean">
    <description>Status of the high beam lamps.  References signal "HeadLghtHiOn_B_Stat".</description>
</param>
</struct>

<struct name="TireStatus">
<description>The status and pressure of the tires.</description>
<param name="pressureTelltale" type="WarningLightStatus">
  <description>Status of the Tire Pressure Telltale. See WarningLightStatus.</description>
</param>
  <param name="leftFront" type="SingleTireStatus">
    <description>The status of the left front tire.</description>
</param>
  <param name="rightFront" type="SingleTireStatus">
    <description>The status of the right front tire.</description>
</param>
  <param name="leftRear" type="SingleTireStatus">
    <description>The status of the left rear tire.</description>
</param>
  <param name="rightRear" type="SingleTireStatus">
    <description>The status of the right rear tire.</description>
</param>
  <param name="innerLeftRear" type="SingleTireStatus">
    <description>The status of the inner left rear.</description>
</param>
  <param name="innerRightRear" type="SingleTireStatus">
    <description>The status of the inner right rear.</description>
</param>
</struct>

<struct name="BeltStatus">
  <param name="driverBeltDeployed" type="VehicleDataEventStatus">
    <description>References signal "VedsDrvBelt_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="passengerBeltDeployed" type="VehicleDataEventStatus">
    <description>References signal "VedsPasBelt_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="passengerBuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw1PasBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="driverBuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw1DrvBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="leftRow2BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw2lBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="passengerChildDetected" type="VehicleDataEventStatus">
    <description>References signal "VedsRw1PasChld_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="rightRow2BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw2rBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="middleRow2BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw2mBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="middleRow3BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw3mBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="leftRow3BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw3lBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="rightRow3BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw3rBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="leftRearInflatableBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw2lRib_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="rightRearInflatableBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw2rRib_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="middleRow1BeltDeployed" type="VehicleDataEventStatus">
    <description>References signal "VedsRw1mBelt_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
  <param name="middleRow1BuckleBelted" type="VehicleDataEventStatus">
    <description>References signal "VedsRw1mBckl_D_Ltchd". See VehicleDataEventStatus.</description>
</param>
</struct>

  <struct name="BodyInformation">
  <param name="parkBrakeActive" type="Boolean">
    <description>References signal "PrkBrkActv_B_Actl".</description>
</param>
  <param name="ignitionStableStatus" type="IgnitionStableStatus">
    <description>References signal "Ignition_Switch_Stable". See IgnitionStableStatus.</description>
</param>
  <param name="ignitionStatus" type="IgnitionStatus">
    <description>References signal "Ignition_status". See IgnitionStatus.</description>
</param>
</struct>

<struct name="DeviceStatus">
  <param name="voiceRecOn" type="Boolean">
    <description>References signal "CPM_VoiceRec_STAT".</description>
</param>
  <param name="btIconOn" type="Boolean">
    <description>References signal "BT_ICON".</description>
</param>
  <param name="callActive" type="Boolean">
    <description>References signal "CPM_Call_Active_STAT".</description>
</param>
  <param name="phoneRoaming" type="Boolean">
    <description>References signal "CPM_Phone_Roaming_STAT".</description>
</param>
  <param name="textMsgAvailable" type="Boolean">
    <description>References signal "CPM_TextMsg_AVAL".</description>
</param>
  <param name="battLevelStatus" type="DeviceLevelStatus">
    <description>Device battery level status.  References signal "CPM_Batt_Level_STAT". See DeviceLevelStatus.</description>
</param>
  <param name="stereoAudioOutputMuted" type="Boolean">
    <description>References signal "CPM_Stereo_Audio_Output".</description>
</param>
  <param name="monoAudioOutputMuted" type="Boolean">
    <description>References signal "CPM_Mono_Audio_Output".</description>
</param>
  <param name="signalLevelStatus" type="DeviceLevelStatus">
    <description>Device signal level status.  References signal "CPM_Signal_Strength_STAT". See DeviceLevelStatus.</description>
</param>
  <param name="primaryAudioSource" type="PrimaryAudioSource">
    <description>References signal "CPM_Stereo_PAS_Source". See PrimaryAudioSource.</description>
</param>
  <param name="eCallEventActive" type="Boolean">
    <description>References signal "eCall_Event".</description>
</param>
</struct>

<struct name="MyKey">
  <param name="e911Override" type="VehicleDataStatus">
    <description>Indicates whether e911 override is on.  References signal "MyKey_e911Override_St". See VehicleDataStatus.</description>
</param>
</struct>
<!--end of IVI part-->

</interface>

<interface name="Buttons" version="1.0" date="2013-04-12">
	<function name="GetCapabilities" messagetype="request">
		<description>Method should be invoked at system startup. Provides information about all supported hardware buttons and their capabilites</description>
    </function>
    <function name="GetCapabilities" messagetype="response">
        <param name="capabilities" type="Common.ButtonCapabilities" array="true" minsize="1" maxsize="100" mandatory="true">
        	<description>See ButtonCapabilities</description>
        </param>
        <param name="presetBankCapabilities" type="Common.PresetBankCapabilities" mandatory="false">
        	<description>If returned, the platform supports custom on-screen Presets</description>
    	</param>
    </function>
    <function name="OnButtonEvent" messagetype="notification">
    	<description>Notifies application of UP/DOWN events for buttons</description>
    	<param name="name" type="Common.ButtonName" mandatory="true"/>
    	<param name="mode" type="Common.ButtonEventMode" mandatory="true">
            <description>Indicates whether this is an UP or DOWN event.</description>
    	</param>
    	<param name="customButtonID" type="Integer" mandatory="false" minvalue="0" maxvalue="65536">
    		<description>If ButtonName is “CUSTOM_BUTTON", this references the integer ID passed by a custom button. (e.g. softButtonName)</description>
    	</param>
    </function>
    <function name="OnButtonPress" messagetype="notification">
        <param name="name" type="Common.ButtonName" mandatory="true"/>
        <param name="mode" type="Common.ButtonPressMode" mandatory="true">
            <description>Indicates whether this is a LONG or SHORT button press event.</description>
        </param>
        <param name="customButtonID" type="Integer" mandatory="false" minvalue="0" maxvalue="65536">
            <description>If ButtonName is “CUSTOM_BUTTON", this references the string passed by a custom button. (e.g. softButtonName)</description>
        </param>
    </function>
</interface>

<interface name="BasicCommunication" version="1.0" date="2013-04-12">
    <function name="OnReady" messagetype="notification">
      <description>HMI notifies SDL about its readiness to start communication. In fact, this has to be the first message between SDL and HMI.</description>
    </function>
    <function name="GetDeviceList" messagetype="request">
        <description>Request from HMI to SmartDeviceLink to get the list of devices</description>
    </function>
    <function name="GetDeviceList" messagetype="response">
        <param name="deviceList" type="Common.DeviceInfo" mandatory="false" array="true" minsize="1" maxsize="100"/>
    </function>
    <function name="StartDeviceDiscovery" messagetype="request">
      <description>Initiated by HMI user. In response optional list of found devices - if not provided, not were found.</description>
    </function>
    <function name="StartDeviceDiscovery" messagetype="response">
      <param name="deviceList" type="Common.DeviceInfo" mandatory="false" array="true" minsize="1" maxsize="100"/>
    </function>
    <function name="OnDeviceListUpdated" messagetype="notification">
        <description>Notification from SmartDeviceLink to HMI about changes in device list.</description>
        <param name="deviceList" type="Common.DeviceInfo" mandatory="false" array="true" minsize="1" maxsize="100"/>
    </function>
    <function name="GetAppList" messagetype="request">
        <description>This methos is usually invoked by HMI to get list of registered apps.</description>
    </function>
    <function name="GetAppList" messagetype="response">
        <param name="appList" type="Common.HMIApplication" mandatory="false" array="true" minsize="1"/>
    </function>
    <function name="ActivateApp" messagetype="request">
      <description>Invoked by UI component when user clicks on app in the list of registered apps or on soft button with 'STEAL_FOCUS' action. Application is shown on recieving successful response.</description>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of selected application.</description>
      </param>
    </function>
    <function name="ActivateApp" messagetype="response">
    </function>
    <function name="OnAppDeactivated" messagetype="notification">
      <description>Invoked by UI component when user switches to any functionality which is not other mobile application.</description>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of deactivated application.</description>
      </param>
      <param name="reason" type="Common.DeactivateReason" mandatory="true">
        <description>Specifies the functionality user switched to.</description>
      </param>
    </function>
    <function name="OnAppRegistered" messagetype="notification">
      <description>Issued by SDL to notify HMI about new application registered.</description>
      <param name="application" type="Common.HMIApplication" mandatory="true"/>
    </function>
    <function name="OnAppUnregistered" messagetype="notification">
      <description>Issued by SDL to notify HMI about application unregistered. Application then to be removed from application list; all data connected with application has to be cleared up.</description>
      <param name="appID" type="Integer" mandatory="true"/>
    </function>
    <function name="ExitApplication" messagetype="request">
      <description>Used by HMI when User chooses to exit application. Sent from HMI to SDL.</description>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="ExitApplication" messagetype="response">
      <description>Success of operation.</description>
    </function>
    <function name="ExitAllApplications" messagetype="request">
      <description>Sent by HMI to SDL to close all registered applications.</description>
      <param name="reason" type="Common.ApplicationsCloseReason" mandatory="true">
        <description>Specifies reason for exiting all apllications.</description>
      </param>
    </function>
    <function name="ExitAllApplications" messagetype="response">
    </function>
    <function name="MixingAudioSupported" messagetype="request">
      <description>Request from SDL to HMI to find out if the last one supports mixing audio (ie recording TTS command and playing audio).</description>
    </function>
    <function name="MixingAudioSupported" messagetype="response">
      <description>If no response received SDL suggest that mixing audio is not supported</description>
      <param name="attenuatedSupported" type="Boolean" mandatory="true"/>
    </function>
    <function name="PlayTone" messagetype="notification">
      <description>Sent by SDL to HMI to notify that the tone should be played.</description>
    </function>
    <!-- Policies -->
    <function name="AllowAllApps" messagetype="request">
      <description>Initiated by SDL. Results by user/HMI allowing SDL functionality or disallowing access to all mobile apps.</description>
    </function>
    <function name="AllowAllApps" messagetype="response">
      <param name="allowed" type="Boolean" mandatory="true"/>
    </function>
    <function name="AllowApp" messagetype="request">
      <param name="app" type="Common.HMIApplication" mandatory="true"/>
      <param name="appPermissions" type="String" array="true" minsize="1" maxsize="100" mandatory="false">
        <description>List of permissions required by application.</description>
      </param>
    </function>
    <function name="AllowApp" messagetype="response">
      <param name="allowed" type="Boolean" mandatory="true"/>
    </function>
</interface>

<interface name="VR" version="1.0" date="2013-04-17">
  <function name="IsReady" messagetype="request">
    <description>Method should be invoked at system startup. Response provides information about presence of VR module and its readiness to cooperate with SDL.</description>
  </function>
  <function name="IsReady" messagetype="response">
    <param name="available" type="Boolean" mandatory="true">
      <description>If true then VR is present and ready to communicate with SDL.</description>
    </param>
  </function>
  <function name="Started" messagetype="notification">
    <description>Initiated by VR module to let SDL know that VR session has started.</description>
  </function>
  <function name="Stopped" messagetype="notification">
    <description>Initiated by VR module to let SDL know that VR session has stopped.</description>
  </function>
  <function name="AddCommand" messagetype="request">
    <description>Adds command(string with associated id) to VR.</description>
    <param name="cmdID" type="Integer" mandatory="true" minvalue="0" maxvalue="2000000000">
      <description>ID of command to used in OnCommand notification.</description>
    </param>
    <param name="vrCommands" type="String" mandatory="true" maxlength="99" minsize="1" maxsize="100" array="true">
      <description>List of strings to be used as VR commands.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="AddCommand" messagetype="response">
  </function>
  <function name="DeleteCommand" messagetype="request">
    <description>Delete commands from VR</description>
    <param name="cmdID" type="Integer" mandatory="true">
      <description>ID of list of commands sent by AddCommand.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="DeleteCommand" messagetype="response">
  </function>
  <function name="OnCommand" messagetype="notification">
    <description>Notifies SDL about command trigerred via VR</description>
    <param name="cmdID" type="Integer" mandatory="true">
      <description>ID of list of commands which trigerred command belongs to.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="ChangeRegistration" messagetype="request">
    <description>Request from SmartDeviceLink to HMI to change language for app.</description>
    <param name="language" type="Common.Language" mandatory="true">
      <description>The language application wants to switch to.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="ChangeRegistration" messagetype="response">
  </function>
  <function name="OnLanguageChange" messagetype="notification">
    <description>Notification from HMI to SmartDeviceLink about change of  language.</description>
    <param name="language" type="Common.Language" mandatory="true">
      <description>Language VR switched to.</description>
    </param>
  </function>
  <function name="GetSupportedLanguages" messagetype="request">
    <description>Method should be invoked at system startup. Response provides information about VR supported languages.</description>
  </function>
  <function name="GetSupportedLanguages" messagetype="response">
    <param name="languages" type="Common.Language" mandatory="true" array="true" minsize="1" maxsize="100">
      <description>List of languages supported in VR.</description>
    </param>
  </function>
  <function name="GetLanguage" messagetype="request">
    <description>Request from SmartDeviceLink to HMI to get currently active  VR language</description>
  </function>
  <function name="GetLanguage" messagetype="response">
    <param name="language" type="Common.Language" mandatory="true"/>
  </function>
</interface>

<interface name="TTS" version="1.0" date="2013-04-18">
  <description>RPC for communication between TTS and SDL.</description>
  <function name="IsReady" messagetype="request">
    <description>Method should be invoked at system startup. Response provides information about presence of TTS module and its readiness to cooperate with SDL.</description>
  </function>
  <function name="IsReady" messagetype="response">
    <param name="available" type="Boolean" mandatory="true">
      <description>If true then TTS is present and ready to communicate with SDL.</description>
    </param>
  </function>
  <function name="Speak" messagetype="request">
    <description>RPC from SDL to TTS to record text.</description>
    <param name="ttsChunks" type="Common.TTSChunk" mandatory="true" array="true" minsize="1" maxsize="100">
      <description>List of strings to be recorded.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="Speak" messagetype="response">
    <description>Provides information about success of operation.</description>
  </function>
  <function name="StopSpeaking" messagetype="request">
    <description>Initiated by SDL to stop recording text.</description>
  </function>
  <function name="StopSpeaking" messagetype="response">
  </function>
  <function name="ChangeRegistration" messagetype="request">
    <description>Request from SmartDeviceLink to HMI to change language for app.</description>
    <param name="language" type="Common.Language" mandatory="true">
      <description>The language application wants to switch to.</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="ChangeRegistration" messagetype="response">
  </function>
  <function name="OnLanguageChange" messagetype="notification">
    <description>Notification from HMI to SmartDeviceLink about change of  language.</description>
    <param name="language" type="Common.Language" mandatory="true">
      <description>Language TTS switched to.</description>
    </param>
  </function>
  <function name="GetSupportedLanguages" messagetype="request">
    <description>Method should be invoked at system startup. Response provides information about TTS supported languages.</description>
  </function>
  <function name="GetSupportedLanguages" messagetype="response">
    <param name="languages" type="Common.Language" mandatory="true" array="true" minsize="1" maxsize="100">
      <description>List of languages supported in TTS.</description>
    </param>
  </function>
  <function name="GetLanguage" messagetype="request">
    <description>Request from SmartDeviceLink to HMI to get currently active  TTS language</description>
  </function>
  <function name="GetLanguage" messagetype="response">
    <param name="language" type="Common.Language" mandatory="true"/>
  </function>
  <function name="SetGlobalProperties" messagetype="request">
      <description>Sets some properties for the application initiated request.</description>
      <param name="helpPrompt" type="Common.TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" >
        <description>
          The help prompt.
          An array of text chunks of type TTSChunk. See TTSChunk.
          The array must have at least one item.
        </description>
      </param>
      <param name="timeoutPrompt" type="Common.TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" >
        <description>
          Help text for a wait timeout.
          An array of text chunks of type TTSChunk. See TTSChunk.
          The array must have at least one item.
        </description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application requested this RPC.</description>
      </param>
  </function>
  <function name="SetGlobalProperties" messagetype="response">
  </function>
</interface>

<interface name="UI" version="1.0" date="2013-04-16">
    <function name="Alert" messagetype="request">
        <description>Shows an alert which typically consists of text-to-speech message and text on the display. At least either alertText1, alertText2 or TTSChunks need to be provided.</description>
        <param name="alertStrings" type="Common.TextFieldStruct" mandatory="true" array="true" minsize="0" maxsize="3">
          <description>Array of lines of alert text fields. See TextFieldStruct. Uses alertText1, alertText2, alertText3.</description>
        </param>
        <param name="duration" type="Integer" mandatory="false" minvalue="3000" maxvalue="10000" defvalue="5000">
          <description>Timeout in milliseconds. Typical timeouts are 3-5 seconds. If omitted, timeout is set to 5s.</description>
        </param>
        <param name="softButtons" type="Common.SoftButton" mandatory="false" minsize="0" maxsize="4" array="true">
          <description>App defined SoftButtons</description>
        </param>
        <param name="appID" type="Integer" mandatory="true">
          <description>ID of application requested this RPC.</description>
        </param>
    </function>
    <function name="Alert" messagetype="response">
      <param name="tryAgainTime" type="Integer" mandatory="false" minvalue="0" maxvalue="2000000000">
        <description>Amount of time (in seconds) that an app must wait before resending an alert.</description>
      </param>
    </function>
    <function name="ShowNotification" messagetype="notification">
      <description>Initiated by SDL in order to notify user about some actions, i.e. while waiting for updates from server etc.</description>
      <param name="text" type="Common.TextFieldStruct" mandatory="true"/>
      <param name="icon" type="Common.Image" mandatory="false"/>
      <param name="timeout" type="Integer" mandatory="true">
        <description>Pop-up is excpeted to be shown during timeout and then closed by HMI or closed using ClosePopUp request from SDL.</description>
      </param>
    </function>
    <function name="Show" messagetype="request">
      <param name="showStrings" type="Common.TextFieldStruct" mandatory="true" array="true" minsize="0" maxsize="7">
        <description>Array of lines of show text fields. See TextFieldStruct. Uses mainField1, mainField2, mainField3, mainField4. If some field is not set, the corresponding text stays unchanged. If field's text is empty "", the field will be cleared.
          mainField1: The text that should be displayed in a single or upper display line.
          mainField2: The text that should be displayed on the second display line.
          mainField3: The text that should be displayed on the second "page" first display line.
          mainField4: The text that should be displayed on the second "page" second display line.
          statusBar: statusBar.
          mediaClock: Text value for MediaClock field. Has to be properly formatted by Mobile App according to Sync capabilities.
          mediaTrack: The text that should be displayed in the track field. This field is only valid for media applications on NGN type ACMs.
        </description>
      </param>
      <param name="alignment" type="Common.TextAlignment" mandatory="false">
        <description>Specifies how mainField1 and mainField2 texts should be aligned on display.</description>
        <description>If omitted, texts will be centered</description>
      </param>
      <param name="graphic" type="Common.Image" mandatory="false">
        <description>Path to optional image. If omitted on supported displays, the displayed graphic shall not change.</description>
      </param>
      <param name="softButtons" type="Common.SoftButton" minsize="0" maxsize="8" array="true" mandatory="false">
        <description>App defined SoftButtons.</description>
        <description>If omitted on supported displays, the currently displayed SoftButton values will not change.</description>
      </param>
      <param name="customPresets" type="String" maxlength="500" minsize="0" maxsize="6" array="true" mandatory="false">
        <description>App labeled on-screen presets (i.e. GEN2).</description>
        <description>If omitted on supported displays, the presets will be shown as not defined.</description>
      </param>
    </function>
    <function name="Show" messagetype="response">
    </function>
    <function name="AddCommand" messagetype="request">
      <description>Adds a command to the application menu.</description>
      <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
        <description>ID of the command to add.</description>
      </param>
      <param name="menuParams" type="Common.MenuParams" mandatory="false">
        <description>Optional sub value containing menu parameters</description>
      </param>
      <param name="cmdIcon" type="Common.Image" mandatory="false">
         <description>Image struct determining whether static or dynamic icon.</description>
         <description>If omitted on supported displays, no (or the default if applicable) icon shall be displayed.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="AddCommand" messagetype="response">
    </function>
    <function name="DeleteCommand" messagetype="request">
      <description>Deletes command from the in-application menu with the specified command id.</description>
      <param name="cmdID" type="Integer" mandatory="true" minvalue="0" maxvalue="2000000000">
        <description>cmdID sent via AddCommand request - id of command to be deleted.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="DeleteCommand" messagetype="response">
    </function>
    <function name="AddSubMenu" messagetype="request">
      <description>Adds a sub menu to the in-application menu.</description>
      <param name="menuID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
        <description>ID of the sub menu to add. Unique for the application.</description>
      </param>
      <param name="menuParams" type="Common.MenuParams" mandatory="true">
        <description>Position and name of the added menu.'parent' field is ommited for this API. </description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="AddSubMenu" messagetype="response">
    </function>
    <function name="DeleteSubMenu" messagetype="request">
      <description>Deletes a submenu from the in-application menu.</description>
      <param name="menuID" type="Integer" minvalue="0" maxvalue="2000000000">
        <description>The "menuID" of the submenu to delete. (See addSubMenu.menuID)</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="DeleteSubMenu" messagetype="response">
    </function>
    <function name="CreateInteractionChoiceSet" messagetype="request">
      <description>Creates interaction choice set to be used later by performInteraction</description>
      <param name="interactionChoiceSetID" type="Integer" minvalue="0" maxvalue="2000000000">
        <description>Unique ID used for this interaction choice set.</description>
      </param>
      <param name="choiceSet" type="Common.Choice" minsize="1" maxsize="100" array="true" />
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="CreateInteractionChoiceSet" messagetype="response">
    </function>
    <function name="DeleteInteractionChoiceSet" messagetype="request">
      <description>Deletes interaction choice set that has been created with "CreateInteractionChoiceSet".</description>
      <description>The interaction may only be deleted when not currently in use by a "performInteraction".</description>
      <param name="interactionChoiceSetID" type="Integer" minvalue="0" maxvalue="2000000000">
        <description>ID of the interaction choice set to delete.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="DeleteInteractionChoiceSet" messagetype="response">
    </function>
    <function name="PerformInteraction" messagetype="request">
      <description>Triggers an interaction (e.g. "Permit GPS?" - Yes, no, Always Allow).</description>
      <param name="initialText" type="Common.TextFieldStruct" mandatory="true">
        <description>Uses initialInteractionText. See TextFieldStruct.</description>
      </param>
      <param name="choiceSet" type="Common.Choice" minsize="1" maxsize="100" array="true" mandatory="true">
        <description>List of interaction choice set IDs to use with an interaction.</description>
      </param>
      <param name="timeout" type="Integer" minvalue="5000" maxvalue="100000" defvalue="10000" mandatory="true">
        <description>Timeout in milliseconds.</description>
        <description>If omitted a standard value of 10000 milliseconds is used.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="PerformInteraction" messagetype="response">
      <param name="choiceID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
        <description>ID of the choice that was selected in response to PerformInteraction.</description>
      </param>
    </function>
    <function name="SetMediaClockTimer" messagetype="request">
      <description>Sets the initial media clock value and automatic update method.</description>
      <param name="startTime" type="Common.TimeFormat" mandatory="false">
        <description>startTime must be provided for "COUNTUP" and "COUNTDOWN"</description>
        <description>startTime will be ignored for "PAUSE", "RESUME", and "CLEAR"</description>
      </param>
      <param name="updateMode" type="Common.ClockUpdateMode" mandatory="true">
        <description>Enumeration to control the media clock.</description>
        <description>In case of pause, resume, or clear, the start time value is ignored and shall be left out.  For resume, the time continues with the same value as it was when paused.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="SetMediaClockTimer" messagetype="response">
    </function>
    <function name="SetGlobalProperties" messagetype="request">
      <description>Sets some properties for the application initiated request.</description>
      <param name="vrHelpTitle" type="String" maxlength="500" mandatory="false">
        <description>VR Help Title text.</description>
        <description>If omitted on supported displays, the default SYNC help title shall be used.</description>
      </param>
      <param name="vrHelp" type="Common.VrHelpItem" minsize="1" maxsize="100" array="true" mandatory="false">
        <description>If omitted on supported displays, the default SYNC generated help items shall be used.</description>
        <description>If the list of VR Help Items contains nonsequential positions (e.g. [1,2,4]), the RPC shall be rejected.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="SetGlobalProperties" messagetype="response">
    </function>
    <function name="OnCommand" messagetype="notification">
      <description>Notification is initiated by HMI on user choosing menu item.</description>
      <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
        <description>Command ID, which is related to a specific menu entry.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="OnSystemContext" messagetype="notification">
      <description>Notification initiated by HMI when user changes context: goes to menu (in-application menu or system menu); switches to VR; pop-up appears on screen etc.</description>
      <param name="systemContext" type="Common.SystemContext" mandatory="true"></param>
    </function>
    <function name="GetCapabilities" messagetype="request">
      <description>Method is invoked at system startup by SDL to request information about UI capabilities of HMI.</description>
    </function>
    <function name="GetCapabilities" messagetype="response">
      <param name="displayCapabilities" type="Common.DisplayCapabilities" mandatory="true"/>
      <param name="hmiZoneCapabilities" type="Common.HmiZoneCapabilities" mandatory="true"/>
      <param name="softButtonCapabilities" type="Common.SoftButtonCapabilities" mandatory="false">
        <description>If returned, the platform supports on-screen SoftButtons.</description>
      </param>
    </function>
    <function name="ChangeRegistration" messagetype="request">
      <description>Request from SmartDeviceLink to HMI to change language for app.</description>
      <param name="language" type="Common.Language" mandatory="true">
        <description>The language application wants to switch to.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="ChangeRegistration" messagetype="response">
    </function>
    <function name="OnLanguageChange" messagetype="notification">
      <description>Notification from HMI to SmartDeviceLink about change of  language.</description>
      <param name="language" type="Common.Language" mandatory="true">
        <description>Language UI switched to.</description>
      </param>
    </function>
    <function name="GetSupportedLanguages" messagetype="request">
      <description>Method should be invoked at system startup. Response provides information about UI supported languages.</description>
    </function>
    <function name="GetSupportedLanguages" messagetype="response">
      <param name="languages" type="Common.Language" mandatory="true" array="true" minsize="1" maxsize="100">
        <description>List of languages supported in UI.</description>
      </param>
    </function>
    <function name="GetLanguage" messagetype="request">
      <description>Request from SmartDeviceLink to HMI to get currently active  UI language</description>
    </function>
    <function name="GetLanguage" messagetype="response">
      <param name="language" type="Common.Language" mandatory="true"/>
    </function>
    <function name="OnDriverDistraction" messagetype="notification">
      <description>Notification is sent from HMI to SDL when interaction with head unit can badly reflect on drivers attention.</description>
      <param name="state" type="Common.DriverDistractionState" mandatory="true"/>
    </function>
    <function name="SetAppIcon" messagetype="request">
      <description>Used to set existing local file on SYNC as the app's icon.</description>
      <param name="syncFileName" type="Common.Image" mandatory="true"/>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="SetAppIcon" messagetype="response">
    </function>
    <function name="OnDeviceChosen" messagetype="notification">
      <description>Notification is initiated by HMI on user selecting device in list of devices.</description>
      <param name="deviceInfo" type="Common.DeviceInfo" mandatory="true"/>
    </function>
    <function name="Slider" messagetype="request">
      <description>Creates a full screen or pop-up overlay (depending on platform) with a single user controlled slider.</description>
      <param name="numTicks" type="Integer" minvalue="2" maxvalue="26" mandatory="true">
        <description>Number of selectable items on a horizontal axis</description>
      </param>
      <param name="position" type="Integer" minvalue="1" maxvalue="26" mandatory="true">
        <description>Initial position of slider control (cannot exceed numTicks)</description>
      </param>
      <param name="sliderHeader" type="String" maxlength="500" mandatory="true">
        <description>Text header to display</description>
      </param>
      <param name="sliderFooter" type="String" maxlength="500"  minsize="1" maxsize="26" array="true" mandatory="false">
        <description>Text footer to display (meant to display min/max threshold descriptors).</description>
        <description>For a static text footer, only one footer string shall be provided in the array.</description>
        <description>For a dynamic text footer, the number of footer text string in the array must match the numTicks value.</description>
        <description>For a dynamic text footer, text array string should correlate with potential slider position index.</description>
        <description>If omitted on supported displays, no footer text shall be displayed.</description>
      </param>
      <param name="timeout" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
        <description>App defined timeout.</description>
        <description>If omitted, the value is set to 10000.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="Slider" messagetype="response">
      <param name="sliderPosition" type="Integer" minvalue="1" maxvalue="26" mandatory="true">
        <description>Current slider value returned when saved or canceled (aborted)</description>
        <description>This value is only returned for resultCodes "SAVED" or "ABORTED"</description>
      </param>
    </function>
    <function name="ScrollableMessage" messagetype="request">
      <description>Creates a full screen overlay containing a large block of formatted text that can be scrolled with up to 8 SoftButtons defined</description>
      <param name="messageText" type="Common.TextFieldStruct" mandatory="true">
        <description>Body of text that can include newlines and tabs. Uses scrollableMessageBody.</description>
      </param>
      <param name="timeout" type="Integer" minvalue="0" maxvalue="65535" defvalue="30000" mandatory="false">
        <description>App defined timeout.</description>
      </param>
      <param name="softButtons" type="Common.SoftButton" minsize="0" maxsize="8" array="true" mandatory="false">
        <description>App defined SoftButtons.</description>
        <description>If omitted on supported displays, only the system defined "Close" SoftButton will be displayed.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="ScrollableMessage" messagetype="response">
    </function>
    <function name="PerformAudioPassThru" messagetype="request">
      <param name="audioPassThruDisplayTexts" type="Common.TextFieldStruct" mandatory="true" minsize="0" maxsize="2" array="true">
        <description>Uses
            audioPassThruDisplayText1: First line of text displayed during audio capture.
            audioPassThruDisplayText2: Second line of text displayed during audio capture.</description>
      </param>
      <param name="maxDuration" type="Integer" minvalue="1" maxvalue="1000000" mandatory="false">
        <description>The maximum duration of audio recording in milliseconds. </description>
      </param>
    </function>
    <function name="PerformAudioPassThru" messagetype="response">
    </function>
    <function name="EndAudioPassThru" messagetype="request">
      <description>When this request is invoked, the audio capture stops.</description>
    </function>
    <function name="EndAudioPassThru" messagetype="response">
    </function>
    <function name="IsReady" messagetype="request">
      <description>Method should be invoked at system startup. Response provides information about presence of UI module and its readiness to cooperate with SDL.</description>
    </function>
    <function name="IsReady" messagetype="response">
      <param name="available" type="Boolean" mandatory="true">
        <description>If true then UI is present and ready to communicate with SDL.</description>
      </param>
    </function>
    <function name="ClosePopUp" messagetype="request">
      <description>Initiated by SDL to close currently active pop-up on HMI.</description>
    </function>
    <function name="ClosePopUp" messagetype="response">
      <description>Provides result of operation.</description>
    </function>
</interface>

<interface name="Navigation" version="1.0" date="2013-05-22">
    <function name="IsReady" messagetype="request">
      <description>Method should be invoked at system startup. Response provides information about presence of UINavigation module and its readiness to cooperate with SDL.</description>
    </function>
    <function name="IsReady" messagetype="response">
      <param name="available" type="Boolean" mandatory="true">
        <description>If true then Navigation is present and ready to communicate with SDL.</description>
      </param>
    </function>
    <function name="ShowConstantTBT" messagetype="request">
      <description>Request from SmartDeviceLinkCore to HMI to show info about navigation.</description>
      <param name="navigationTexts" type="Common.TextFieldStruct" mandatory="true" array="true" minsize="0" maxsize="4">
        <description>See TextFieldStruct. Uses:
          navigationText1
          navigationText2
          ETA
          totalDistance.</description>
      </param>
      <param name="turnIcon" type="Common.Image">
      </param>
      <param name="distanceToManeuver" type="Float" minvalue="0" maxvalue="1000000000" mandatory="true">
        <description>Distance till next maneuver (starting from) from previous maneuver.</description>
        <description>Used to calculate progress bar.</description>
      </param>
      <param name="distanceToManeuverScale" type="Float" minvalue="0" maxvalue="1000000000" mandatory="true">
        <description>Fraction of distance till next maneuver (starting from when AlertManeuver is triggered).</description>
        <description>Used to calculate progress bar.</description>
      </param>
      <param name="maneuverComplete" type="Boolean" mandatory="false">
        <description>If and when a maneuver has completed while an AlertManeuver is active, the app must send this value set to TRUE in order to clear the AlertManeuver overlay.</description>
        <description>If omitted the value will be assumed as FALSE.</description>
      </param>
      <param name="softButtons" type="Common.SoftButton" minsize="0" maxsize="3" array="true" mandatory="false">
        <description>Three dynamic SoftButtons available (second SoftButton is fixed to "Turns").</description>
        <description>If omitted on supported displays, the currently displayed SoftButton values will not change.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="ShowConstantTBT" messagetype="response">
    </function>
    <function name="AlertManeuver" messagetype="request">
      <description>Request from SmartDeviceLinkCore to HMI to announce navigation maneuver</description>
      <param name="softButtons" type="Common.SoftButton" minsize="0" maxsize="3" array="true" mandatory="false">
        <description>If omitted on supported displays, only the system defined "Close" SoftButton shall be displayed.</description>
      </param>
    </function>
    <function name="AlertManeuver" messagetype="response">
    </function>
    <function name="UpdateTurnList" messagetype="request">
      <description>Request from SmartDeviceLinkCore to HMI to update turn list.</description>
      <param name="turnList" type="Common.Turn" minsize="1" maxsize="100" array="true" mandatory="true">
      </param>
      <param name="softButtons" type="Common.SoftButton" minsize="0" maxsize="1" array="true" mandatory="false">
        <description>If omitted on supported displays, app-defined SoftButton will be left blank.</description>
      </param>
      <param name="appID" type="Integer" mandatory="true">
        <description>ID of application that requested this RPC.</description>
      </param>
    </function>
    <function name="UpdateTurnList" messagetype="response">
    </function>
    <function name="OnTBTClientState" messagetype="notification">
      <description>Provides applications with notifications specific to the current Turn-By-Turn client status on the module</description>
      <param name="state" type="Common.TBTState">
        <description>Current State of TBT client</description>
      </param>
    </function>
</interface>

<interface name="VehicleInfo" version="1.0" date="2013-04-21">
  <function name="IsReady" messagetype="request">
    <description>Method should be invoked at system startup. Response provides information about presence of UI module and its readiness to cooperate with SDL.</description>
  </function>
  <function name="IsReady" messagetype="response">
    <param name="available" type="Boolean" mandatory="true">
      <description>If true then UI is present and ready to communicate with SDL.</description>
    </param>
  </function>
  <function name="GetVehicleType" messagetype="request">
    <description>Request from SmartDeviceLinkCore to HMI to get info about the vehicle.</description>
  </function>
  <function name="GetVehicleType" messagetype="response">
    <param name="vehicleType" type="Common.VehicleType" mandatory="true"/>
  </function>
  <function name="ReadDID" messagetype="request">
    <description>Non periodic vehicle data read request.</description>
    <param name="ecuName" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
      <description>Name of ECU.</description>
    </param>
    <param name="didLocation" type="Integer" minvalue="0" maxvalue="65535" minsize="0" maxsize="1000" array="true" mandatory="true">
      <description>Get raw data from vehicle data DID location(s).</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="ReadDID" messagetype="response">
    <param name="didResult" type="Common.DIDResult" minsize="0" maxsize="1000" array="true" mandatory="false">
      <description>Array of requested DID results (with data if available).</description>
    </param>
  </function>
  <function name="GetDTCs" messagetype="request">
    <description>Vehicle module diagnostic trouble code request.</description>
    <param name="ecuName" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
      <description>Name of ECU.</description>
    </param>
    <param name="dtcMask" type="Integer" minvalue="0" maxvalue="255" mandatory="false">
      <description>DTC Mask Byte to be sent in diagnostic request to module .</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application that requested this RPC.</description>
    </param>
  </function>
  <function name="GetDTCs" messagetype="response">
    <param name="ecuHeader" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
      <description>2 byte ECU Header for DTC response (as defined in VHR_Layout_Specification_DTCs.pdf)</description>
    </param>
    <param name="dtc" type="String" mandatory="false" minsize="1" maxsize="15" maxlength="10" array="true">
      <description>
        Array of all reported DTCs on module (ecuHeader contains information if list is truncated).
        Each DTC is represented by 4 bytes (3 bytes of data and 1 byte status as defined in VHR_Layout_Specification_DTCs.pdf).
      </description>
    </param>
  </function>
  <function name="GetVehicleData" messagetype="request">
    <description>Non periodic vehicle data read request.</description>
    <param name="gps" type="Boolean" mandatory="false">
      <description>See GPSData</description>
    </param>
    <param name="speed" type="Boolean" mandatory="false">
      <description>The vehicle speed in kilometers per hour</description>
    </param>
    <param name="rpm" type="Boolean" mandatory="false">
      <description>The number of revolutions per minute of the engine</description>
    </param>
    <param name="fuelLevel" type="Boolean" mandatory="false">
      <description>The fuel level in the tank (percentage)</description>
    </param>
    <param name="fuelLevel_State" type="Boolean" mandatory="false">
      <description>The fuel level state</description>
    </param>
    <param name="instantFuelConsumption" type="Boolean" mandatory="false">
      <description>The instantaneous fuel consumption in microlitres</description>
    </param>
    <param name="externalTemperature" type="Boolean" mandatory="false">
      <description>The external temperature in degrees celsius</description>
    </param>
    <param name="vin" type="Boolean" mandatory="false">
      <description>Vehicle identification number</description>
    </param>
    <param name="prndl" type="Boolean" mandatory="false">
      <description>See PRNDL</description>
    </param>
    <param name="tirePressure" type="Boolean" mandatory="false">
      <description>See TireStatus</description>
    </param>
    <param name="odometer" type="Boolean" mandatory="false">
      <description>Odometer in km</description>
    </param>
    <param name="beltStatus" type="Boolean" mandatory="false">
      <description>The status of the seat belts</description>
    </param>
    <param name="bodyInformation" type="Boolean" mandatory="false">
      <description>The body information including ignition status and internal temp</description>
    </param>
    <param name="deviceStatus" type="Boolean" mandatory="false">
      <description>The device status including signal and battery strength</description>
    </param>
    <param name="driverBraking" type="Boolean" mandatory="false">
      <description>The status of the brake pedal</description>
    </param>
    <param name="wiperStatus" type="Boolean" mandatory="false">
      <description>The status of the wipers</description>
    </param>
    <param name="headLampStatus" type="Boolean" mandatory="false">
      <description>Status of the head lamps</description>
    </param>
    <param name="engineTorque" type="Boolean" mandatory="false">
      <description>Torque value for engine (in Nm) on non-diesel variants</description>
    </param>
    <param name="accPedalPosition" type="Boolean" mandatory="false">
      <description>Accelerator pedal position (percentage depressed)</description>
    </param>
    <param name="steeringWheelAngle" type="Boolean" mandatory="false">
      <description>Current angle of the steering wheel (in deg)</description>
    </param>
    <param name="myKey" type="Boolean" mandatory="false">
      <description>Information related to the MyKey feature</description>
    </param>
    <param name="appID" type="Integer" mandatory="true">
      <description>ID of application requested this RPC.</description>
    </param>
  </function>

  <function name="GetVehicleData" messagetype="response">
    <param name="gps" type="Common.GPSData" mandatory="false">
      <description>See GPSData</description>
    </param>
    <param name="speed" type="Float" minvalue="0" maxvalue="700" mandatory="false">
      <description>The vehicle speed in kilometers per hour</description>
    </param>
    <param name="rpm" type="Integer" minvalue="0" maxvalue="20000" mandatory="false">
      <description>The number of revolutions per minute of the engine</description>
    </param>
    <param name="fuelLevel" type="Float" minvalue="-6" maxvalue="106" mandatory="false">
      <description>The fuel level in the tank (percentage)</description>
    </param>
    <param name="fuelLevel_State" type="Common.ComponentVolumeStatus" mandatory="false">
      <description>The fuel level state</description>
    </param>
    <param name="instantFuelConsumption" type="Float" minvalue="0" maxvalue="25575" mandatory="false">
      <description>The instantaneous fuel consumption in microlitres</description>
    </param>
    <param name="externalTemperature" type="Float" minvalue="-40" maxvalue="100" mandatory="false">
      <description>The external temperature in degrees celsius</description>
    </param>
    <param name="vin" type="String" maxlength="17" mandatory="false">
      <description>Vehicle identification number</description>
    </param>
    <param name="prndl" type="Common.PRNDL" mandatory="false">
      <description>See PRNDL</description>
    </param>
    <param name="tirePressure" type="Common.TireStatus" mandatory="false">
      <description>See TireStatus</description>
    </param>
    <param name="odometer" type="Integer" minvalue="0" maxvalue="17000000" mandatory="false">
      <description>Odometer in km</description>
    </param>
    <param name="beltStatus" type="Common.BeltStatus" mandatory="false">
      <description>The status of the seat belts</description>
    </param>
    <param name="bodyInformation" type="Common.BodyInformation" mandatory="false">
      <description>The body information including power modes</description>
    </param>
    <param name="deviceStatus" type="Common.DeviceStatus" mandatory="false">
      <description>The device status including signal and battery strength</description>
    </param>
    <param name="driverBraking" type="Common.VehicleDataEventStatus" mandatory="false">
      <description>The status of the brake pedal</description>
    </param>
    <param name="wiperStatus" type="Common.WiperStatus" mandatory="false">
      <description>The status of the wipers</description>
    </param>
    <param name="headLampStatus" type="Common.HeadLampStatus" mandatory="false">
      <description>Status of the head lamps</description>
    </param>
    <param name="engineTorque" type="Float" minvalue="-1000" maxvalue="2000" mandatory="false">
      <description>Torque value for engine (in Nm) on non-diesel variants</description>
    </param>
    <param name="accPedalPosition" type="Float" minvalue="0" maxvalue="100" mandatory="false">
      <description>Accelerator pedal position (percentage depressed)</description>
    </param>
    <param name="steeringWheelAngle" type="Float" minvalue="-2000" maxvalue="2000" mandatory="false">
      <description>Current angle of the steering wheel (in deg)</description>
    </param>
    <param name="myKey" type="Common.MyKey" mandatory="false">
      <description>Information related to the MyKey feature</description>
    </param>
  </function>

  <function name="OnVehicleData" messagetype="notification">
    <description>Callback for the periodic and non periodic vehicle data read function.</description>
    <param name="gps" type="Common.GPSData" mandatory="false">
      <description>See GPSData</description>
    </param>
    <param name="speed" type="Float" minvalue="-100" maxvalue="500" mandatory="false">
      <description>The vehicle speed in kilometers per hour</description>
    </param>
    <param name="rpm" type="Integer" minvalue="0" maxvalue="20000" mandatory="false">
      <description>The number of revolutions per minute of the engine</description>
    </param>
    <param name="fuelLevel" type="Float" minvalue="-6" maxvalue="106" mandatory="false">
      <description>The fuel level in the tank (percentage)</description>
    </param>
    <param name="fuelLevel_State" type="Common.ComponentVolumeStatus" mandatory="false">
      <description>The fuel level state</description>
    </param>
    <param name="instantFuelConsumption" type="Float" minvalue="0" maxvalue="25575" mandatory="false">
      <description>The instantaneous fuel consumption in microlitres</description>
    </param>
    <param name="externalTemperature" type="Float" minvalue="-40" maxvalue="100" mandatory="false">
      <description>The external temperature in degrees celsius</description>
    </param>
    <param name="vin" type="String" maxlength="17" mandatory="false">
      <description>Vehicle identification number.</description>
    </param>
    <param name="prndl" type="Common.PRNDL" mandatory="false">
      <description>See PRNDL</description>
    </param>
    <param name="tirePressure" type="Common.TireStatus" mandatory="false">
      <description>See TireStatus</description>
    </param>
    <param name="odometer" type="Integer" minvalue="0" maxvalue="2000000" mandatory="false">
      <description>Odometer in km</description>
    </param>
    <param name="beltStatus" type="Common.BeltStatus" mandatory="false">
      <description>The status of the seat belts</description>
    </param>
    <param name="bodyInformation" type="Common.BodyInformation" mandatory="false">
      <description>The body information including power modes</description>
    </param>
    <param name="deviceStatus" type="Common.DeviceStatus" mandatory="false">
      <description>The device status including signal and battery strength</description>
    </param>
    <param name="driverBraking" type="Common.VehicleDataEventStatus" mandatory="false">
      <description>The status of the brake pedal</description>
    </param>
    <param name="wiperStatus" type="Common.WiperStatus" mandatory="false">
      <description>The status of the wipers</description>
    </param>
    <param name="headLampStatus" type="Common.HeadLampStatus" mandatory="false">
      <description>Status of the head lamps</description>
    </param>
    <param name="engineTorque" type="Float" minvalue="-1000" maxvalue="2000" mandatory="false">
      <description>Torque value for engine (in Nm) on non-diesel variants</description>
    </param>
    <param name="accPedalPosition" type="Float" minvalue="0" maxvalue="100" mandatory="false">
      <description>Accelerator pedal position (percentage depressed)</description>
    </param>
    <param name="steeringWheelAngle" type="Float" minvalue="-2000" maxvalue="2000" mandatory="false">
      <description>Current angle of the steering wheel (in deg)</description>
    </param>
    <param name="myKey" type="Common.MyKey" mandatory="false">
      <description>Information related to the MyKey feature</description>
    </param>
  </function>
</interface>

</interfaces>
